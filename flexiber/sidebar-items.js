initSidebarItems({"derive":[["Decodable","Derive the `Decodable` trait on a struct."],["Encodable","Derive the `Encodable` trait on a struct."]],"enum":[["Class","Class of BER tag."],["ErrorKind","Error type."]],"macro":[["debug","Local version of `debug!`."],["debug_now","Immediate version of `debug!`."],["error","Local version of `error!`."],["error_now","Immediate version of `error!`."],["info","Local version of `info!`."],["info_now","Immediate version of `info!`."],["log","Local version of `log!`."],["log_now","Immediate version of `log!`."],["trace","Local version of `trace!`."],["trace_now","Immediate version of `trace!`."],["try_debug","Fallible version of `debug!`."],["try_debug_now","Fallible immediate version of `debug!`."],["try_error","Fallible version of `error!`."],["try_error_now","Fallible immediate version of `error!`."],["try_info","Fallible version of `info!`."],["try_info_now","Fallible immediate version of `info!`."],["try_log_now","Fallible immediate version of `log!`."],["try_trace","Fallible version of `trace!`."],["try_trace_now","Fallible immediate version of `trace!`."],["try_warn","Fallible version of `warn!`."],["try_warn_now","Fallible immediate version of `warn!`."],["warn","Local version of `warn!`."],["warn_now","Immediate version of `warn!`."]],"struct":[["Decoder","BER-TLV decoder."],["Encoder","BER-TLV encoder."],["Error","Error type."],["Length","BER-TLV-encoded length."],["SimpleTag","These are tags like in SIMPLE-TLV."],["Slice","Slice of at most `Length::max()` bytes."],["Tag","The tag field consists of a single byte encoding a tag number from 1 to 254. The values ‘00’ and ‘FF’ are invalid."],["TaggedValue","BER-TLV data object."]],"trait":[["Container","Multiple encodables in a container."],["Decodable","Decoding trait."],["Encodable","Encoding trait."],["TagLike","This is the common trait that types to be used as tags are supposed to implement."],["Tagged","Types with an associated BER-TLV [`Tag`]."]],"type":[["Result","Result type."],["TaggedSlice","Raw BER-TLV data object `TaggedValue<Slice<'_>>`."]]});